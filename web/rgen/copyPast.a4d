in vendors show and _form, add dleft and dright

<div class="dleft col-15">
<div class="dright col-15">

in unit model, add to cleanup

if ($cudResult = "success")
	units.reload
end if

in ingredients form, replace ship unit id with

<%/*Modified*/%>
<div>
	<label>Units</label>
	<%=html.select_tag("ingredient.ship_unit_id";\\
		units.makeOptionMenu($ingredient{"ingredient.ship_unit_id"});\\
		html.opt(":size := 1")) %>
	<br />
</div>


replace helper units.a4l with


/*
	Units support library
*/


library "units"




/**************************************************************************
	__load__
	
	Since units are infrequently edited, we might as well cache them.
**************************************************************************/

method "__load__"
	
	reload
	
end method

method "__unload__"
	RowSet.clearPersistent("units")
end method

/**************************************************************************
	_loadUnits
	
	Pre-build an option menu of units
**************************************************************************/

method "_loadUnits"
	
	 //Use a semaphore to make sure this is atomic
	//while (semaphore("$units._loadUnits"))	
	//end while
	
	
	

	// Do the standard query of all units, this creates the  RowSet
	all records([Units])
	order by([units];[units]name)
	$rows := rest.build_RowSet("unit";0;html.opt(':nobatch -> :true; :name -> :units; :timeout -> 600'))
	$qryUnits := RowSet.persistent("units")
	
	// Prepare to iterate through the RowSet from the beginning
	$qryUnits->beforeFirst
	$row := $qryUnits->getRow
	self{"_unitMenu"} := ""
	
	while($qryUnits->next)
		self{"_unitMenu"} += '<option value="$row{"unit.id"}">$row{"unit.name"}</option>\n'
	end while
	
	//clear semaphore("$units._loadUnits")
		
end method



/**************************************************************************
	reload
	
	This should be called when unit data changes
**************************************************************************/

method "reload"
	
	_loadUnits
	
end method



/**************************************************************************
	makeOptionMenu
***************************************************************************/

method "makeOptionMenu"($inCurrentID)
	if (RowSet.persistent("units") = 0 )
		reload
	end if

	if (RowSet.persistent("units")->timedOut)
		reload
	end if
	
	return (replace string(self{"_unitMenu"}; 'value="$inCurrentID"'; 'value="$inCurrentID" selected'))
	
end method



/**************************************************************************
	dumpData
**************************************************************************/

method "dumpData"

	a4d.debug.dump collection(self)

end method


end library

